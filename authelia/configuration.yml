log:
  level: info

server:
  address: "tcp://0.0.0.0:9091/authelia"
  endpoints:
    authz:
      forward-auth:
        implementation: "ForwardAuth"
        authn_strategies:
          - name: "CookieSession"

session:
  cookies:
    - domain: {{mustEnv "AUDIOBOOKSHELF_HOST"}}
      authelia_url: 'https://{{mustEnv "AUDIOBOOKSHELF_HOST"}}/authelia'
      default_redirection_url: 'https://{{mustEnv "AUDIOBOOKSHELF_HOST"}}/'
      name: "abs_sess"
      same_site: "lax"
    - domain: {{mustEnv "OLLAMA_HOST"}}
      authelia_url: 'https://{{mustEnv "OLLAMA_HOST"}}/authelia'
      default_redirection_url: 'https://{{mustEnv "OLLAMA_HOST"}}/'
      name: "ollama_sess"
      same_site: "lax"
    - domain: {{mustEnv "NEXTCLOUD_HOST"}}              
      authelia_url: 'https://{{mustEnv "NEXTCLOUD_HOST"}}/authelia'
      default_redirection_url: 'https://{{mustEnv "NEXTCLOUD_HOST"}}/'
      name: "nc_sess"
      same_site: "lax"
    - domain: "{{ mustEnv `GRAFANA_HOST` }}"
      authelia_url: "https://{{ mustEnv `GRAFANA_HOST` }}/authelia"
      default_redirection_url: "https://{{ mustEnv `GRAFANA_HOST` }}/"
      name: "grafana_sess"
      same_site: "lax"

authentication_backend:
  ldap:
    implementation: lldap
    address: ldap://lldap:3890
    base_dn: "{{ mustEnv `LLDAP_LDAP_BASE_DN` }}"
    user: "{{ mustEnv `LLDAP_AUTHELIA_SERVICE_ACCOUNT` }}"    
    password: "{{ mustEnv `LLDAP_AUTHELIA_SERVICE_ACCOUNT_PASSWORD` }}"

storage:
  local:
    path: /config/db.sqlite3  

notifier:
  smtp:
    address: "submission://{{ mustEnv `SMTP_HOST` }}:{{ mustEnv `SMTP_PORT_STARTTLS` }}"
    username: "{{ mustEnv `SMTP_USERNAME` }}"  
    password: "{{ mustEnv `SMTP_PASSWORD` }}"  
    sender: "Authelia <authelia@{{ mustEnv `HOMELAB_DOMAIN` }}>"
    subject: "[Authelia] {title}"
    startup_check_address: "test@{{ mustEnv `HOMELAB_DOMAIN` }}"
    timeout: "10s"

identity_validation:
  reset_password:
    jwt_secret: "{{ mustEnv `RESET_JWT_SECRET` }}"


# Forward auth controles here, 
# Convention appname-user, admin.
access_control:
  default_policy: deny
  rules:
    - domain: {{mustEnv "OLLAMA_HOST"}}
      policy: one_factor
      subject: ["group:ollama-user", "group:admin"]

identity_providers:
  oidc:
    hmac_secret: '{{ mustEnv "NC_AUTH_OIDC_HMAC_SECRET_B64" | b64dec }}'
    minimum_parameter_entropy: 16
    jwks:
      - key_id: "signing-rsa-2025-09"
        use: "sig"
        algorithm: "RS256"
        key: |
          {{ env "NC_AUTH_OIDC_SIGNING_PRIVATE_PEM_B64" | b64dec | nindent 10 }}
        certificate_chain: |
          {{ env "NC_AUTH_OIDC_SIGNING_PUBLIC_CRT_B64" | b64dec | nindent 10 }}

    lifespans:
      custom:
        nc_short:
          authorize_code: 5m
          access_token: 1h
          id_token: 30m
    
    claims_policies:
          grafana:
            id_token: [email, name, groups, preferred_username]

    clients:
      - client_id: nextcloud
        client_name: Nextcloud
        lifespan: nc_short
        client_secret: '{{ mustEnv "NC_CLIENT_SECRET" | trim }}'
        public: false

        redirect_uris:
          - https://{{mustEnv "NEXTCLOUD_HOST"}}/apps/user_oidc/callback
          - https://{{mustEnv "NEXTCLOUD_HOST"}}/index.php/apps/user_oidc/callback
          - https://{{mustEnv "NEXTCLOUD_HOST"}}/apps/user_oidc/code

        scopes: [openid, profile, email, groups]
        authorization_policy: one_factor
        token_endpoint_auth_method: client_secret_post
        require_pkce: true
        pkce_challenge_method: S256
        consent_mode: auto

      - client_id: audiobookshelf
        client_name: Audiobookshelf
        client_secret: '{{ mustEnv "ABS_CLIENT_SECRET_DIGEST" | trim }}'
        public: false
        redirect_uris:
          - https://{{ mustEnv "AUDIOBOOKSHELF_HOST" }}/auth/openid/callback
          - https://{{ mustEnv "AUDIOBOOKSHELF_HOST" }}/auth/openid/mobile-redirect
          - audiobookshelf://oauth
        scopes: [openid, profile, email, groups]
        authorization_policy: one_factor
        token_endpoint_auth_method: client_secret_basic
        require_pkce: true
        pkce_challenge_method: S256
        access_token_signed_response_alg: 'none'
        userinfo_signed_response_alg: 'none'
        lifespan: nc_short

      - client_id: grafana
        client_name: Grafana
        client_secret: "{{ mustEnv `GRAFANA_CLIENT_SECRET_DIGEST` }}" 
        public: false
        authorization_policy: one_factor
        require_pkce: true
        pkce_challenge_method: S256
        redirect_uris:
          - "https://{{ mustEnv `GRAFANA_HOST` }}/login/generic_oauth"
        scopes: [openid, profile, email, groups]
        response_types: [code]
        grant_types: [authorization_code]
        token_endpoint_auth_method: client_secret_basic
        access_token_signed_response_alg: "none"
        userinfo_signed_response_alg: "none"
        claims_policy: grafana
